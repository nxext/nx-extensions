{
  "$schema": "http://json-schema.org/schema",
  "cli": "nx",
  "id": "Application",
  "title": "Create an Ionic React Application for Nx",
  "examples": [
    {
      "command": "g app myapp --directory=myorg",
      "description": "Generate apps/myorg/myapp and apps/myorg/myapp-e2e"
    }
  ],
  "type": "object",
  "properties": {
    "name": {
      "description": "The name of the application.",
      "type": "string",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the application?"
    },
    "directory": {
      "description": "The directory of the new application.",
      "type": "string",
      "alias": "d"
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["jest", "none"],
      "description": "Test runner to use for unit tests.",
      "default": "jest"
    },
    "e2eTestRunner": {
      "type": "string",
      "enum": ["cypress", "none"],
      "description": "Test runner to use for end to end (e2e) tests.",
      "default": "cypress"
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the application (used for linting).",
      "alias": "t"
    },
    "template": {
      "description": "The starter template to use.",
      "type": "string",
      "default": "blank",
      "x-prompt": {
        "message": "Which starter template would you like to use?",
        "type": "list",
        "items": [
          {
            "value": "blank",
            "label": "blank     | A blank starter project"
          },
          {
            "value": "list",
            "label": "list      | A starting project with a list"
          },
          {
            "value": "sidemenu",
            "label": "sidemenu  | A starting project with a list"
          },
          {
            "value": "tabs",
            "label": "tabs      | A starting project with a simple tabbed interface"
          }
        ]
      }
    },
    "capacitor": {
      "type": "boolean",
      "description": "Generate a Capacitor project.",
      "default": true
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false
    },
    "standaloneConfig": {
      "description": "Split the project configuration into `<projectRoot>/project.json` rather than including it inside `workspace.json`.",
      "type": "boolean"
    }
  },
  "required": ["name"]
}
